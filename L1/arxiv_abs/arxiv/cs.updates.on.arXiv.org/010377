Let $V$ be a multiset of $n$ points in $\mathbb{R}^d$, which we call voters, and let $k\geq 1$ and $\ell\geq
1$ be two given constants. We consider the following game, where two players $\mathcal{P}$ and $\mathcal{Q}$
compete over the voters in $V$: First, player $\mathcal{P}$ selects $k$ points in $\mathbb{R}^d$,
and then player $\mathcal{Q}$ selects $\ell$ points in $\mathbb{R}^d$. Player $\mathcal{P}$
wins a voter $v\in V$ iff $\mathrm{dist}(v,P) \leq \mathrm{dist}(v,Q)$, where $\mathrm{dist}(v,P)
:= \min_{p\in P} \mathrm{dist}(v,p)$ and $\mathrm{dist}(v,Q)$ is defined similarly. Player
$\mathcal{P}$ wins the game if he wins at least half the voters. The algorithmic problem we study
is the following: given $V$, $k$, and $\ell$, how efficiently can we decide if player $\mathcal{P}$
has a winning strategy, that is, if $\mathcal{P}$ can select his $k$ points such that he wins the game
no matter where $\mathcal{Q}$ places her points. Banik et al. devised a singly-exponential algorithm
for the game in $\mathbb{R}^1$, for the case $k=\ell$. We improve their result by presenting the
first polynomial-time algorithm for the game in $\mathbb{R}^1$. Our algorithm can handle arbitrary
values of $k$ and $\ell$. We also show that if $d\geq 2$, deciding if player $\mathcal{P}$ has a winning
strategy is $\Sigma_2^P$-hard when $k$ and $\ell$ are part of the input. Finally, we prove that for
any dimension $d$, the problem is contained in the complexity class $\exists\forall \mathbb{R}$,
and we give an algorithm that works in polynomial time for fixed $k$ and $\ell$. 
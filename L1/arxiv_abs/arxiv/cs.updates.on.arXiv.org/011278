Addressing users requests in the form of bug reports and Github issues represents a crucial task
of any successful software project. However, user-submitted issue reports tend to widely differ
in their quality, and developers spend a considerable amount of time handling these reports. Moreover,
an inefficient prioritization of requested changes could have a negative impact on the developers'
workloads. By collecting a dataset of around 6,000 issues from the history of 323 GitHub projects,
we observe that developers spend a long time (i.e., about five months, on average) before labeling
an issue as a wontfix. For this reason, in this paper, we empirically investigate the nature of wontfix
issues, by manually analyzing a sample of 800 issues of this kind, extracted from heterogeneous
projects. We explore the common reasons behind a "wontfix decision", the main characteristics
of wontfix issues and the potential factors that could be connected with the time to close them. Furthermore,
we experiment approaches for just-in-time prediction of wontfix issues using machine learning
techniques to analyze the titles and descriptions of reported issues. Our investigation shed some
light on the wontfix issues' characteristics, as well as the potential factors that may affect the
time required to make a "wontfix decision". Our results also demonstrate that it is possible to predict
whether an issue will be closed as a wontfix with average values of precision, recall, and F-measure
close to 99%, confirming the practical usefulness of the proposed approach for improving the issue
management practices on GitHub. 
The interface to the MUMPS solver was updated in the JOREK MHD code to support Block Low Rank (BLR)
compression and an interface to the new PaStiX solver version 6 has been implemented supporting
BLR as well. First tests were carried out with JOREK, which solves a large sparse matrix system iteratively
in each time step. For the preconditioning, a direct solver is applied in the code to sub-matrices,
and at this point BLR was applied with the results being summarized in this report. For a simple case
with a linearly growing mode, results with both solvers look promising with a considerable reduction
of the memory consumption by several ten percent was obtained. A direct increase in performance
was seen in particular configurations already. The choice of the BLR accuracy parameter $\epsilon$
proves to be critical in this simple test and also in more realistic simulations, which were carried
out only with MUMPS due to the limited time available. The more realistic test showed an increase
in run time when using BLR, which was mitigated when using larger values of $\epsilon$. However,
the GMRes iterative solver does not reach convergence anymore when $\epsilon$ is too large, since
the preconditioner becomes too inaccurate in that case. It is thus critical to use an $\epsilon$
as large as possible, while still reaching convergence. More tests regarding this optimum will
be necessary in the future. BLR can also lead to an indirect speed-up in particular cases, when the
simulation can be run on a smaller number of compute nodes due to the reduced memory consumption.

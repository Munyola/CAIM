The Internet of Things (IoT) is a network of physical, heterogeneous, connected devices providing
services through private networks and the Internet. It connects a range of new devices to the Internet
so they can communicate with Web servers and other devices around the world. Today's standard platform
for communicating Web pages and Web apps is JavaScript (JS) and extending the same standard platform
to connect IoT devices seems more than appropriate. However, porting JS applications to the large
variety of IoT devices, specifically on System-on-a-Chip (SoCs) devices (\eg~Arduino Uno, Particle
\photon), is challenging because these devices are constrained in terms of memory and storage capacity.
Running JS applications adds an overhead of resources to deploy a code interpreter on the devices.
Also, running JS applications may not be possible ``as is'' on some device missing some hardware/software
capabilities. To address this problem, we propose \momit~a multiobjective optimization approach
to miniaturize JS applications to run on IoT constrained devices. To validate \momit, we miniaturize
a JS interpreter to execute a testbed comprised of 23 applications and measure their performances
before and after applying the miniaturization process. We implement \momit~using three different
search algorithms and found that it can reduce code size, memory usage, and CPU time by median values
of 31\%, 56\%, and 36\% respectively. Finally, MoMIT ported the miniaturized JS interpreters up
to to 2 SoCs additional devices, in comparison of using default JS interpreter features. 
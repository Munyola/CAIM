Is matching in NC, i.e., is there a deterministic fast parallel algorithm for it? This has been an
outstanding open question in TCS for over three decades, ever since the discovery of randomized
NC matching algorithms [KUW85, MVV87]. Over the last five years, the theoretical computer science
community has launched a relentless attack on this question, leading to the discovery of several
powerful ideas. We give what appears to be the culmination of this line of work: An NC algorithm for
finding a minimum-weight perfect matching in a general graph with polynomially bounded edge weights,
provided it is given an oracle for the decision problem. Consequently, for settling the main open
problem, it suffices to obtain an NC algorithm for the decision problem. We believe this new fact
has qualitatively changed the nature of this open problem. All known efficient matching algorithms
for general graphs follow one of two approaches: given by [Edmonds65] and [Lovasz79]. Our oracle-based
algorithm follows a new approach and uses many of ideas discovered in the last five years. The difficulty
of obtaining an NC perfect matching algorithm led researchers to study matching vis-a-vis clever
relaxations of the class NC. In this vein, recently [GG15] gave a pseudo-deterministic RNC algorithm
for finding a perfect matching in a bipartite graph, i.e., an RNC algorithm with the additional requirement
that on the same graph, it should return the same (i.e., unique) perfect matching for almost all choices
of random bits. A corollary of our reduction is an analogous algorithm for general graphs. 
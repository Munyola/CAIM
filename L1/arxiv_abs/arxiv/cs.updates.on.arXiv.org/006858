This paper develops a technique to detect whether the cross traffic competing with a flow is elastic
or not, and shows how to use the elasticity detector to improve congestion control. If the cross traffic
is elastic, i.e., made up of flows like Cubic or NewReno that increase their rate when they perceive
available bandwidth, then one should use a scheme that competes well with such traffic. Such a scheme
will not be able to control delays because the cross traffic will not cooperate to maintain low delays.
If, however, cross traffic is inelastic, then one can use a suitable delay-controlled algorithm.
Our elasticity detector uses an asymmetric sinusoidal pulse pattern and estimates elasticity
by computing the frequency response (FFT) of the cross traffic estimate; we have measured its accuracy
to be over 90%. We present the design and evaluation of Nimbus, a congestion control protocol that
uses the elasticity detector to switch between delay-control and TCP-competitive modes. Our results
on emulated and real-world paths show that Nimbus achieves throughput comparable to or better than
Cubic always, but with delays that are much lower when cross traffic is inelastic. Unlike BBR, Nimbus
is fair to Cubic, and has significantly lower delay by 40-50 ms. Compared to Copa, which also switches
between a delay-controlling and a TCP-competitive mode, Nimbus is more robust at correctly detecting
the nature of cross traffic, and unlike Copa, it is usable by a variety of delay-based and TCP-competitive
methods. 
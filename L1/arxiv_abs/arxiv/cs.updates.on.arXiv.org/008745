Recent characterizations of data movement performance have evaluated optimizations for dense
and blocked accesses used by accelerators like GPUs and Xeon Phi, but sparse access patterns like
scatter and gather are still not well understood across current and emerging architectures. We
propose a tunable benchmark suite, Spatter, that allows users to characterize scatter, gather,
and related sparse access patterns at a low level across multiple backends, including CUDA, OpenCL,
and OpenMP. Spatter also allows users to vary the block size and amount of data that is moved to create
a more comprehensive picture of sparse access patterns and to model patterns that are found in real
applications. With Spatter we aim to characterize the performance of memory systems in a novel way
by evaluating how the density of accesses compares against real-world effective memory bandwidths
(measured by STREAM) and how it can be compared across widely varying architectures including GPUs
and x86, ARM, and Power CPUs. We demonstrate how Spatter can be used to generate analysis plots comparing
different architectures and show that current GPU systems achieve up to 65% of STREAM bandwidth
for sparse accesses and are more energy efficient in doing so for several different sparsity patterns.
Our future plans for the spatter benchmark are to use these results to predict the impact of new memory
access primitives on various architectures, develop backends for novel hardware like FPGAs and
the Emu Chick, and automate testing so that users can perform their own sparse access studies. 
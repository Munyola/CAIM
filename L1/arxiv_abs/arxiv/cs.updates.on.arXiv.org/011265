Users of cloud platforms often must expend significant manual efforts in the deployment and orchestration
of their services on cloud platforms due primarily to having to deal with the high variabilities
in the configuration options for virtualized environment setup and meeting the software dependencies
for each service. Despite the emergence of many DevOps cloud automation and orchestration tools,
users must still rely on specifying low-level scripting details for service deployment and management
using Infrastructure-as-Code (IAC). Using these tools required domain expertise along with a
steep learning curve. To address these challenges in a tool-and-technology agnostic manner, which
helps promote interoperability and portability of services hosted across cloud platforms, we
present initial ideas on a GUI based cloud automation and orchestration framework called CloudCAMP.
It incorporates domain-specific modeling so that the specifications and dependencies imposed
by the cloud platform and application architecture can be specified at an intuitive, higher level
of abstraction without the need for domain expertise using Model-Driven Engineering(MDE) paradigm.
CloudCAMP transforms the partial specifications into deployable Infrastructure-as-Code (IAC)
using the Transformational-Generative paradigm and by leveraging an extensible and reusable
knowledge base. The auto-generated IAC can be handled by existing tools to provision the services
components automatically. We validate our approach quantitatively by showing a comparative study
of savings in manual and scripting efforts versus using CloudCAMP. 
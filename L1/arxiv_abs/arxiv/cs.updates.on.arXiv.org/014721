We consider the subgraph isomorphism problem where, given two graphs G (source graph) and F (pattern
graph), one is to decide whether there is a (not necessarily induced) subgraph of G isomorphic to
F. While many practical heuristic algorithms have been developed for the problem, as pointed out
by McCreesh et al. [JAIR 2018], for each of them there are rather small instances which they cannot
cope. Therefore, developing an alternative approach that could possibly cope with these hard instances
would be of interest. A seminal paper by Alon, Yuster and Zwick [J. ACM 1995] introduced the color
coding approach to solve the problem, where the main part is a dynamic programming over color subsets
and partial mappings. As with many exponential-time dynamic programming algorithms, the memory
requirements constitute the main limiting factor for its usage. Because these requirements grow
exponentially with the treewidth of the pattern graph, all existing implementations based on the
color coding principle restrict themselves to specific pattern graphs, e.g., paths or trees. In
contrast, we provide an efficient implementation of the algorithm significantly reducing its
memory requirements so that it can be used for pattern graphs of larger treewidth. Moreover, our
implementation not only decides the existence of an isomorphic subgraph, but it also enumerates
all such subgraphs (or given number of them). We provide an extensive experimental comparison of
our implementation to other available solvers for the problem. 